//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFCinema
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDCinemaEntities : DbContext
    {
        public BDCinemaEntities()
            : base("name=BDCinemaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FDM_Funcion> FDM_Funcion { get; set; }
        public virtual DbSet<FDM_FuncionHora> FDM_FuncionHora { get; set; }
        public virtual DbSet<FDM_FuncionHoraSilla> FDM_FuncionHoraSilla { get; set; }
        public virtual DbSet<FDM_Reserva> FDM_Reserva { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<string> ConsultFechasFuncion(Nullable<decimal> funcion_ID)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultFechasFuncion", funcion_IDParameter);
        }
    
        public virtual ObjectResult<ConsultFunciones_Result> ConsultFunciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultFunciones_Result>("ConsultFunciones");
        }
    
        public virtual ObjectResult<ConsultHorariosReservasFuncion_Result> ConsultHorariosReservasFuncion(Nullable<decimal> funcion)
        {
            var funcionParameter = funcion.HasValue ?
                new ObjectParameter("funcion", funcion) :
                new ObjectParameter("funcion", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultHorariosReservasFuncion_Result>("ConsultHorariosReservasFuncion", funcionParameter);
        }
    
        public virtual ObjectResult<ConsultHorasFuncion_Result> ConsultHorasFuncion(Nullable<decimal> funcion_ID, string fecha)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultHorasFuncion_Result>("ConsultHorasFuncion", funcion_IDParameter, fechaParameter);
        }
    
        public virtual ObjectResult<ConsultReservasFuncionHora_Result> ConsultReservasFuncionHora(Nullable<decimal> funcion, string fecha, string hora)
        {
            var funcionParameter = funcion.HasValue ?
                new ObjectParameter("funcion", funcion) :
                new ObjectParameter("funcion", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultReservasFuncionHora_Result>("ConsultReservasFuncionHora", funcionParameter, fechaParameter, horaParameter);
        }
    
        public virtual ObjectResult<ConsultSillasFuncion_Result> ConsultSillasFuncion(Nullable<decimal> funcion_ID, string fecha, string hora)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultSillasFuncion_Result>("ConsultSillasFuncion", funcion_IDParameter, fechaParameter, horaParameter);
        }
    
        public virtual ObjectResult<string> CreateFuncion(string nombre, Nullable<decimal> precio)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateFuncion", nombreParameter, precioParameter);
        }
    
        public virtual ObjectResult<string> CreateFuncionHora(Nullable<decimal> funcion_ID, string fecha, string hora, Nullable<decimal> descuento, Nullable<decimal> porcentaje)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateFuncionHora", funcion_IDParameter, fechaParameter, horaParameter, descuentoParameter, porcentajeParameter);
        }
    
        public virtual ObjectResult<string> CreateReserva(Nullable<decimal> funcion_ID, string fecha, string hora, Nullable<decimal> silla, string documento, string nombre, string telefono, Nullable<decimal> valorPaga)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var sillaParameter = silla.HasValue ?
                new ObjectParameter("silla", silla) :
                new ObjectParameter("silla", typeof(decimal));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var valorPagaParameter = valorPaga.HasValue ?
                new ObjectParameter("valorPaga", valorPaga) :
                new ObjectParameter("valorPaga", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateReserva", funcion_IDParameter, fechaParameter, horaParameter, sillaParameter, documentoParameter, nombreParameter, telefonoParameter, valorPagaParameter);
        }
    
        public virtual ObjectResult<string> CreateSillaFuncion(Nullable<decimal> funcion_ID, string fecha, string hora, Nullable<decimal> silla)
        {
            var funcion_IDParameter = funcion_ID.HasValue ?
                new ObjectParameter("funcion_ID", funcion_ID) :
                new ObjectParameter("funcion_ID", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var sillaParameter = silla.HasValue ?
                new ObjectParameter("silla", silla) :
                new ObjectParameter("silla", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateSillaFuncion", funcion_IDParameter, fechaParameter, horaParameter, sillaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
